#!/bin/bash

## stuff from jobheader.sh
#PBS -N qsiprep

set -x
set -e

export FREESURFER_LICENSE="hayashis@iu.edu 29511 *CPmh9xvKQKHE FSg0ijTusqaQc"
echo $FREESURFER_LICENSE > license.txt

bl2bids

WORKDIRNAME=$(pwd)/aslpworkdir
outdir=$(pwd)/output

sub=$(jq -r '._inputs[0].meta.subject' config.json)
asl=$(jq -r .asl config.json)
skipbidsvalidation=$(jq -r .skipbidsvalidation config.json)
echo_idx=`jq -r '.echo_idx' config.json`
space=$(jq -r .output_space config.json) 
m0_scale=`jq -r '.m0_scale' config.json`
force_bbr=`jq -r '.force_bbr' config.json`
dummy_vols=`jq -r '.dummy_vols' config.json`
smooth_kernel=`jq -r '.smooth_kernel' config.json`
syn_sdc=`jq -r '.syn_sdc' config.json`
force_syn=`jq -r '.force_syn' config.json`
asl2t1_init=`jq -r '.asl2tl_init' config.json` # register or header
asl2t1_dof=`jq -r '.asl2tl_dof' config.json` # 6, 9, 12

optional=""

# boolean options
[ $skipbidsvalidation == "true" ] && optional="$optional --skip-bids-validation"
[ $syn_sdc == "true" ] && optional="$optional --use-syn-sdc --force-syn"
[ ${m0_scale} ] && optional="$optional --m0_scale ${m0_scale}"
[ ${force_bbr} == "true" ] && optional="$optional --force_bbr"
[ ${dummy_vols} ] && optional="$optional --dummy-vols ${dummy_vols}"
[ ${smooth_kernel} ] && optional="$optional --smooth_kernel ${smooth_kernel}"
[ ${echo_idx} ] && optional="$optional --echo-idx ${echo_idx}"

# remove if stuff already exists
rm -rf $WORKDIRNAME && mkdir -p $WORKDIRNAME
rm -rf $outdir && mkdir -p $outdir

# avoid templateflow problems on HPC's running singularity
mkdir -p templateflow
export SINGULARITYENV_TEMPLATEFLOW_HOME=$PWD/templateflow

# set FreeSurfer
[ -z "$FREESURFER_LICENSE" ] && echo "Please set FREESURFER_LICENSE in .bashrc" && exit 1;

# ASLPrep
time singularity exec -e \
    docker://pennbbl/aslprep:latest \
    /usr/local/miniconda/bin/aslprep \
    --fs-license-file license.txt \
    --output-spaces ${space} \
    --asl2t1-init ${asl2t1_init} \
    --asl2t1-dof ${asl2t1_dof} \
    --nprcs 8 \
    --verbose \
    --work-dir $WORKDIRNAME \
    bids $outdir participant \
    $optional

echo "done with aslprep! - now organizing output"
./aslprep2bl.sh

rm -r $WORKDIRNAME # save lots of space

echo "all done!"
